>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)

>>> bg = BaseGeometry()
>>> bg.integer_validator("width", 89)

>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg = BaseGeometry()
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", None)
Traceback (most recent call last):
TypeError: my_int must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 10.12)
Traceback (most recent call last):
TypeError: my_int must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator(None, 10)

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", -10.12)
Traceback (most recent call last):
TypeError: my_int must be an integer

>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator(None, None)
Traceback (most recent call last):
TypeError: None must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("width", 89)
>>> print(bg.value)
89
